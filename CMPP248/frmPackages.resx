<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>